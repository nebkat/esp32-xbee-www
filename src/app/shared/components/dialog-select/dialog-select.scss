@import '../../../../../node_modules/@angular/material/core/style/menu-common';
@import '../../../../../node_modules/@angular/material/core/style/list-common';
@import '../../../../../node_modules/@angular/material/core/style/variables';
@import '../../../../../node_modules/@angular/material/core/style/vendor-prefixes';

.app-dialog-select {
  display: inline-block;
  width: 100%;
  outline: none;
}

.app-dialog-select-trigger {
  display: inline-table;
  cursor: pointer;
  position: relative;
  box-sizing: border-box;

  .app-dialog-select-disabled & {
    @include user-select(none);
    cursor: default;
  }
}

.app-dialog-select-value {
  width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.app-dialog-select-value-text {
  @include mat-truncate-line();
}

.mat-form-field-type-app-dialog-select {
  &:not(.mat-form-field-disabled) .mat-form-field-flex {
    cursor: pointer;
  }
}

.app-dialog-select-placeholder {
  // Delay the transition until the label has animated about a third of the way through, in
  // order to prevent the placeholder from overlapping for a split second.
  transition: color $swift-ease-out-duration $swift-ease-out-duration / 3
  $swift-ease-out-timing-function;

  ._mat-animation-noopable & {
    transition: none;
  }

  .mat-form-field-hide-placeholder & {
    color: transparent;

    // Overwrite browser specific CSS properties that can overwrite the `color` property.
    // Some developers seem to use this approach to easily overwrite the placeholder / label color.
    -webkit-text-fill-color: transparent;

    // Remove the transition to prevent the placeholder
    // from overlapping when the label comes back down.
    transition: none;
    // Prevents the '...' from showing on the parent element.
    display: block;
  }
}
